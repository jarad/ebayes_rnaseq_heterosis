data {
  int<lower=1> S;
  int<lower=0> count[S]; 
  int<lower=1, upper=3> variety[S]; // 1=parent1, 2=parent2, 3=hybird
  real eta_phi;
  real eta_alpha;
  real eta_delta;
  real eta_psi;
  real sigma_phi;
  real sigma_alpha;
  real sigma_delta;
  real sigma_psi;
  real c[S];                        // lane sequencing depth
}
parameters {
  real phi;
  real alpha;
  real delta;
  real psi;          
}
transformed parameters {
  real mu[S];
  real<lower=0> prec;

  for (i in 1:S) {
    mu[i] <- phi+c[i];
    if (variety[1]==1) mu[i] <- mu[i] - alpha;
    if (variety[i]==2) mu[i] <- mu[i] + alpha;
    if (variety[i]==3) mu[i] <- mu[i] + delta;
  }
  prec <- 1/exp(psi);
}
model {
  phi   ~ normal(            eta_phi,   sigma_phi);
  alpha ~ double_exponential(eta_alpha, sigma_alpha); // Laplace
  delta ~ double_exponential(eta_delta, sigma_delta); // Laplace
  psi   ~ normal(            eta_psi,   sigma_psi);

  count ~ neg_binomial_2_log(mu, prec);
}
